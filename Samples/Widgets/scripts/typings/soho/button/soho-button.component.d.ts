/// <reference path="soho-button.d.ts" />
import { AfterViewInit, ElementRef, NgZone, OnDestroy, OnInit } from '@angular/core';
export declare type SohoButtonType = 'btn' | 'primary' | 'secondary' | 'tertiary' | 'icon' | 'favorite' | 'modal' | 'modal-primary';
export declare class SohoButtonComponent implements AfterViewInit, OnDestroy, OnInit {
    private element;
    private ngZone;
    static BTN: SohoButtonType;
    static PRIMARY: SohoButtonType;
    static SECONDARY: SohoButtonType;
    static TERTIARY: SohoButtonType;
    static ICON: SohoButtonType;
    static FAVORITE: SohoButtonType;
    static MODAL: SohoButtonType;
    static MODAL_PRIMARY: SohoButtonType;
    private jQueryElement;
    private button;
    private buttonType;
    private _buttonOptions;
    private _isToggle;
    private _isTogglePressed;
    private _isPressed;
    sohoButton: SohoButtonType;
    buttonOptions: SohoButtonOptions;
    toggleOnIcon: string;
    toggleOffIcon: string;
    isToggle: boolean;
    isTogglePressed: boolean;
    icon: string;
    isSubmit: boolean;
    ripple: boolean;
    state: any;
    toggle: string;
    expandableExpander: boolean;
    readonly btn: boolean;
    readonly btnPrimary: boolean;
    readonly btnSecondary: boolean;
    readonly btnTertiary: boolean;
    readonly btnIcon: boolean;
    readonly btnToggle: boolean;
    readonly btnModal: boolean;
    readonly btnModalPrimary: boolean;
    readonly btnTogglePressed: boolean;
    readonly iconFavorite: boolean;
    moveToLeft: any;
    moveToRight: any;
    moveToSelected: any;
    readonly noRipple: boolean;
    readonly type: string;
    readonly isExpandableExpander: boolean;
    toggleState(): void;
    readonly ariaPressed: boolean;
    constructor(element: ElementRef, ngZone: NgZone);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    readonly hasIcon: string;
    readonly currentIcon: string;
    isPressed(): boolean;
}
